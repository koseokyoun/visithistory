<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.LocationMapper">

    <resultMap id="locationResultMap" type="Location">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="address" column="address"/>
        <result property="latitude" column="latitude"/>
        <result property="longitude" column="longitude"/>
        <result property="visitedDate" column="visited_date"/>
        <result property="memo" column="memo"/>
        <!-- images 리스트 매핑 (LocationImage와 조인) -->
        <collection property="images" ofType="com.example.demo.model.LocationImage">
            <id property="id" column="image_id"/>
            <result property="locationId" column="location_id"/>
            <result property="imageUrl" column="image_url"/>
        </collection>
    </resultMap>

    <select id="findAll" resultMap="locationResultMap">
        SELECT
            l.id, l.name, l.address, l.latitude, l.longitude, l.memo, l.visited_date,
            li.id AS image_id, li.location_id, li.image_url
        FROM location l
        LEFT JOIN location_image li ON l.id = li.location_id
        ORDER BY l.id DESC, li.id
    </select>

    <select id="findById" resultMap="locationResultMap" parameterType="long">
        SELECT * FROM location WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="Location" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO location (name, address, latitude, longitude, visited_date, memo)
        VALUES (#{name}, #{address}, #{latitude}, #{longitude}, #{visitedDate}, #{memo})
    </insert>

    <insert id="insertImage" parameterType="LocationImage">
        INSERT INTO location_image (location_id, image_url)
        VALUES (#{locationId}, #{imageUrl})
    </insert>

    <update id="update" parameterType="Location">
        UPDATE location
        SET name = #{name},
        address = #{address},
        latitude = #{latitude},
        longitude = #{longitude},
        image_url = #{imageUrl},
        visited_date = #{visitedDate},
        memo = #{memo}
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM location WHERE id = #{id}
    </delete>

</mapper>
